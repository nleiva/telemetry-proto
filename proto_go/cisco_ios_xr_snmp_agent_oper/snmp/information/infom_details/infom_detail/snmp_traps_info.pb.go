// Code generated by protoc-gen-go. DO NOT EDIT.
// source: snmp_traps_info.proto

package cisco_ios_xr_snmp_agent_oper_snmp_information_infom_details_infom_detail

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SnmpTrapsInfo_KEYS struct {
	TrapHost             string   `protobuf:"bytes,1,opt,name=trap_host,json=trapHost,proto3" json:"trap_host,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnmpTrapsInfo_KEYS) Reset()         { *m = SnmpTrapsInfo_KEYS{} }
func (m *SnmpTrapsInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*SnmpTrapsInfo_KEYS) ProtoMessage()    {}
func (*SnmpTrapsInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8232c8f3baaf2bf, []int{0}
}

func (m *SnmpTrapsInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpTrapsInfo_KEYS.Unmarshal(m, b)
}
func (m *SnmpTrapsInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpTrapsInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *SnmpTrapsInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpTrapsInfo_KEYS.Merge(m, src)
}
func (m *SnmpTrapsInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_SnmpTrapsInfo_KEYS.Size(m)
}
func (m *SnmpTrapsInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpTrapsInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpTrapsInfo_KEYS proto.InternalMessageInfo

func (m *SnmpTrapsInfo_KEYS) GetTrapHost() string {
	if m != nil {
		return m.TrapHost
	}
	return ""
}

func (m *SnmpTrapsInfo_KEYS) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type SnmpTrapsInfo struct {
	// NMS/Host address
	Host string `protobuf:"bytes,50,opt,name=host,proto3" json:"host,omitempty"`
	// udp port number
	Port uint32 `protobuf:"varint,51,opt,name=port,proto3" json:"port,omitempty"`
	// Total number of OID's sent
	TrapOidCount uint32 `protobuf:"varint,52,opt,name=trap_oid_count,json=trapOidCount,proto3" json:"trap_oid_count,omitempty"`
	// Per trap OID statistics
	TrapOiDinfo          []*SnmpTrapOidInfo `protobuf:"bytes,53,rep,name=trap_oi_dinfo,json=trapOiDinfo,proto3" json:"trap_oi_dinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SnmpTrapsInfo) Reset()         { *m = SnmpTrapsInfo{} }
func (m *SnmpTrapsInfo) String() string { return proto.CompactTextString(m) }
func (*SnmpTrapsInfo) ProtoMessage()    {}
func (*SnmpTrapsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8232c8f3baaf2bf, []int{1}
}

func (m *SnmpTrapsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpTrapsInfo.Unmarshal(m, b)
}
func (m *SnmpTrapsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpTrapsInfo.Marshal(b, m, deterministic)
}
func (m *SnmpTrapsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpTrapsInfo.Merge(m, src)
}
func (m *SnmpTrapsInfo) XXX_Size() int {
	return xxx_messageInfo_SnmpTrapsInfo.Size(m)
}
func (m *SnmpTrapsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpTrapsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpTrapsInfo proto.InternalMessageInfo

func (m *SnmpTrapsInfo) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *SnmpTrapsInfo) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *SnmpTrapsInfo) GetTrapOidCount() uint32 {
	if m != nil {
		return m.TrapOidCount
	}
	return 0
}

func (m *SnmpTrapsInfo) GetTrapOiDinfo() []*SnmpTrapOidInfo {
	if m != nil {
		return m.TrapOiDinfo
	}
	return nil
}

type SnmpTrapOidInfo struct {
	// TRAP OID
	TrapOid string `protobuf:"bytes,1,opt,name=trap_oid,json=trapOid,proto3" json:"trap_oid,omitempty"`
	// Number of traps sent
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// Number of Traps Dropped
	DropCount uint32 `protobuf:"varint,3,opt,name=drop_count,json=dropCount,proto3" json:"drop_count,omitempty"`
	// Num of times retry
	RetryCount uint32 `protobuf:"varint,4,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	// Timestamp of latest successfully sent
	LastsentTime string `protobuf:"bytes,5,opt,name=lastsent_time,json=lastsentTime,proto3" json:"lastsent_time,omitempty"`
	// Timestamp of latest droped
	LasrdropTime         string   `protobuf:"bytes,6,opt,name=lasrdrop_time,json=lasrdropTime,proto3" json:"lasrdrop_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnmpTrapOidInfo) Reset()         { *m = SnmpTrapOidInfo{} }
func (m *SnmpTrapOidInfo) String() string { return proto.CompactTextString(m) }
func (*SnmpTrapOidInfo) ProtoMessage()    {}
func (*SnmpTrapOidInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8232c8f3baaf2bf, []int{2}
}

func (m *SnmpTrapOidInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpTrapOidInfo.Unmarshal(m, b)
}
func (m *SnmpTrapOidInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpTrapOidInfo.Marshal(b, m, deterministic)
}
func (m *SnmpTrapOidInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpTrapOidInfo.Merge(m, src)
}
func (m *SnmpTrapOidInfo) XXX_Size() int {
	return xxx_messageInfo_SnmpTrapOidInfo.Size(m)
}
func (m *SnmpTrapOidInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpTrapOidInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpTrapOidInfo proto.InternalMessageInfo

func (m *SnmpTrapOidInfo) GetTrapOid() string {
	if m != nil {
		return m.TrapOid
	}
	return ""
}

func (m *SnmpTrapOidInfo) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SnmpTrapOidInfo) GetDropCount() uint32 {
	if m != nil {
		return m.DropCount
	}
	return 0
}

func (m *SnmpTrapOidInfo) GetRetryCount() uint32 {
	if m != nil {
		return m.RetryCount
	}
	return 0
}

func (m *SnmpTrapOidInfo) GetLastsentTime() string {
	if m != nil {
		return m.LastsentTime
	}
	return ""
}

func (m *SnmpTrapOidInfo) GetLasrdropTime() string {
	if m != nil {
		return m.LasrdropTime
	}
	return ""
}

func init() {
	proto.RegisterType((*SnmpTrapsInfo_KEYS)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.infom_details.infom_detail.snmp_traps_info_KEYS")
	proto.RegisterType((*SnmpTrapsInfo)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.infom_details.infom_detail.snmp_traps_info")
	proto.RegisterType((*SnmpTrapOidInfo)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.infom_details.infom_detail.snmp_trap_oid_info")
}

func init() { proto.RegisterFile("snmp_traps_info.proto", fileDescriptor_e8232c8f3baaf2bf) }

var fileDescriptor_e8232c8f3baaf2bf = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcf, 0x4a, 0x03, 0x41,
	0x0c, 0xc6, 0x59, 0xfb, 0xc7, 0x36, 0x6d, 0x15, 0x86, 0x0a, 0x2b, 0x22, 0x96, 0xea, 0xa1, 0xa7,
	0x3d, 0xb4, 0xfa, 0x04, 0x2a, 0x16, 0x3c, 0x08, 0xd5, 0x8b, 0x20, 0x0c, 0x6b, 0x77, 0xd5, 0x81,
	0xee, 0x66, 0x99, 0x89, 0xa0, 0x37, 0xdf, 0xd0, 0x77, 0xf0, 0x49, 0x24, 0x99, 0xe9, 0x8a, 0xf5,
	0xea, 0x2d, 0xf9, 0xf2, 0xcb, 0x24, 0x5f, 0x18, 0xd8, 0x73, 0x65, 0x51, 0x69, 0xb2, 0x69, 0xe5,
	0xb4, 0x29, 0x9f, 0x30, 0xa9, 0x2c, 0x12, 0xaa, 0xf9, 0xd2, 0xb8, 0x25, 0x6a, 0x83, 0x4e, 0xbf,
	0x59, 0x2d, 0x4c, 0xfa, 0x9c, 0x97, 0xa4, 0xb1, 0xca, 0x6d, 0xc2, 0x79, 0xc2, 0xb4, 0x2d, 0x52,
	0x32, 0x58, 0x4a, 0x5c, 0xe8, 0x2c, 0xa7, 0xd4, 0xac, 0xdc, 0xaf, 0x6c, 0x7c, 0x05, 0xc3, 0x8d,
	0x11, 0xfa, 0xfa, 0xf2, 0xfe, 0x56, 0x1d, 0x40, 0x97, 0x25, 0xfd, 0x82, 0x8e, 0xe2, 0x68, 0x14,
	0x4d, 0xba, 0x8b, 0x0e, 0x0b, 0x73, 0x74, 0xa4, 0x14, 0x34, 0x2b, 0xb4, 0x14, 0x6f, 0x8d, 0xa2,
	0xc9, 0x60, 0x21, 0xf1, 0xf8, 0x2b, 0x82, 0xdd, 0x8d, 0x97, 0x98, 0x93, 0xfe, 0xa9, 0xf4, 0x4b,
	0x5c, 0xf7, 0xce, 0x7e, 0x7a, 0xd5, 0x09, 0xec, 0xc8, 0x30, 0x34, 0x99, 0x5e, 0xe2, 0x6b, 0x49,
	0xf1, 0xa9, 0x54, 0xfb, 0xac, 0xde, 0x98, 0xec, 0x9c, 0x35, 0xf5, 0x11, 0xc1, 0x20, 0x60, 0x3a,
	0xe3, 0xf7, 0xe3, 0xb3, 0x51, 0x63, 0xd2, 0x9b, 0x3e, 0x24, 0xff, 0x75, 0x8d, 0xa4, 0x36, 0x20,
	0xab, 0x70, 0x69, 0xd1, 0xf3, 0x3b, 0x5c, 0x70, 0x32, 0xfe, 0x8c, 0x40, 0xfd, 0x65, 0xd4, 0x3e,
	0x74, 0xd6, 0x42, 0xb8, 0xd5, 0x76, 0xd8, 0x5c, 0x0d, 0xa1, 0xe5, 0x1d, 0xf9, 0x5b, 0xf9, 0x44,
	0x1d, 0x02, 0x64, 0x16, 0xab, 0x60, 0xb6, 0x21, 0xa5, 0x2e, 0x2b, 0xde, 0xe9, 0x11, 0xf4, 0x6c,
	0x4e, 0xf6, 0x3d, 0xd4, 0x9b, 0x52, 0x07, 0x91, 0x3c, 0x70, 0x0c, 0x83, 0x55, 0xea, 0xc8, 0xb1,
	0x49, 0x32, 0x45, 0x1e, 0xb7, 0x64, 0x6a, 0x7f, 0x2d, 0xde, 0x99, 0x22, 0x0f, 0x90, 0x95, 0x41,
	0x02, 0xb5, 0x6b, 0x48, 0x44, 0x86, 0x1e, 0xdb, 0xf2, 0xa1, 0x66, 0xdf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xe3, 0xe0, 0xad, 0x5b, 0x69, 0x02, 0x00, 0x00,
}
